# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DATABASE_NAME: test
      DATABASE_USER: postgres
      DATABASE_PASSWORD: postgres
      DATABASE_HOST: "127.0.0.1"
      DATABASE_PORT: 5432
    
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test

        ports:
          - 5432:5432

        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      #----------------------------------------------
      #  -----  install & configure poetry  -----      
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      #----------------------------------------------
      #       load cached venv if cache exists      
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist 
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      #----------------------------------------------
      # install your root project, if required 
      #----------------------------------------------      
      - name: Install library
        run: poetry install --no-interaction

      - name: Migrate database
        run: |
          source .venv/bin/activate
          python manage.py migrate

      - name: Test with pytest
        run: |
          source .venv/bin/activate
          pytest

      - name: Check code format with black
        run: |
          source .venv/bin/activate
          black apps config --check

      - name: Check imports format with isort
        run: |
          source .venv/bin/activate
          isort apps config --check

      - name: Lint with pylint
        run: |
          source .venv/bin/activate
          pylint config apps --load-plugins pylint_django --load-plugins pylint_pytest --django-settings-module=config.settings --rcfile=.pylintrc --fail-under=9